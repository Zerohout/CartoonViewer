<UserControl
    x:Class="CartoonViewer.Views.MainMenuView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cal="http://www.caliburnproject.org"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helper="clr-namespace:CartoonViewer.Helpers"
    xmlns:local="clr-namespace:CartoonViewer.Views"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:mah1="http://metro.mahapps.com/winfx/xaml/shared"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    MinWidth="880"
    MinHeight="660"
    cal:Bind.AtDesignTime="True"
    d:DataContext="{d:DesignData Source=../DesignData/MenuViewDesignData.xaml}"
    d:DesignHeight="660"
    d:DesignWidth="880"
    mc:Ignorable="d">
    <UserControl.Resources>
        <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Foreground" Value="#BE0003" />
            <Setter Property="FontFamily" Value="Comic Sans MS" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="FontWeight" Value="Bold" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="OrangeRed" />
                </Trigger>
                <DataTrigger Binding="{Binding Checked}" Value="True">
                    <Setter Property="Foreground" Value="GreenYellow" />
                    <Setter Property="BorderBrush" Value="LimeGreen" />
                    <Setter Property="BorderThickness" Value="2" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <UserControl.Background>

        <!--<ImageBrush ImageSource="../Resources/MenuViewModelBackgroundVer_3.0.png"/>-->
        <ImageBrush ImageSource="{Binding Background}" Opacity="{Binding Opacity}" />
    </UserControl.Background>
    <Grid Opacity="{Binding Opacity}">
        <Grid.RowDefinitions>
            <RowDefinition Height="0.35*" />
            <RowDefinition Height="0.325*" />
            <RowDefinition Height="0.325*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.31*" />
            <ColumnDefinition Width="0.345*" />
            <ColumnDefinition Width="0.345*" />
        </Grid.ColumnDefinitions>

        <!--#region Row 0-->

        <Grid Grid.Row="0" Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="10" />
                <!--<ColumnDefinition Width="Auto" />-->
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <ListBox
                x:Name="Cartoons"
                Grid.Row="0"
                Grid.RowSpan="4"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Background="Transparent">
                <ListBox.ItemTemplate>
                    <ItemContainerTemplate>
                        <DockPanel Margin="0,7">
                            <CheckBox
                                cal:Message.Attach="[Checked] = [Action CheckedValidation()];[Unchecked] = [Action CheckedValidation()]"
                                DockPanel.Dock="Left"
                                IsChecked="{Binding Checked, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBlock VerticalAlignment="Center" Text="{Binding Name}" />
                        </DockPanel>
                    </ItemContainerTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Grid>

        <Grid Grid.Row="0" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!--<mah:ToggleSwitchButton
                IsChecked="{Binding IsPause}"
                x:Name="Pause"
                Grid.Column="1"
                Grid.Row="0"/>-->

        </Grid>

        <Grid Grid.Row="0" Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="0.23*" />
                <RowDefinition Height="0.41*" />
                <RowDefinition Height="0.36*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.4*" />
                <ColumnDefinition Width="0.43*" />
                <ColumnDefinition Width="0.17*" />
            </Grid.ColumnDefinitions>

            <Button
                Grid.Row="1"
                Grid.Column="1"
                cal:Message.Attach="[Event Click]=[Action Exit()];[Event MouseEnter]=[Action CursorOnExit()];[Event MouseLeave]=[Action CursorOutsideExit()];">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Style.BasedOn>
                            <Style TargetType="{x:Type ButtonBase}">
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="BorderBrush" Value="Transparent" />
                                <Setter Property="BorderThickness" Value="1" />
                                <Setter Property="mah:ControlsHelper.ContentCharacterCasing" Value="Upper" />
                                <Setter Property="mah:ControlsHelper.CornerRadius" Value="3" />
                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}" />
                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}" />
                                <Setter Property="FontWeight" Value="Bold" />
                                <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
                                <Setter Property="MinHeight" Value="25" />
                                <Setter Property="Padding" Value="5,6" />
                                <Setter Property="SnapsToDevicePixels" Value="True" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                                            <Grid>
                                                <Border
                                                    x:Name="Border"
                                                    Background="{TemplateBinding Background}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    CornerRadius="{Binding (mah:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                <Border
                                                    x:Name="DisabledVisualElement"
                                                    Background="Transparent"
                                                    CornerRadius="{Binding (mah:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                    IsHitTestVisible="False"
                                                    Opacity="0"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                <mah:ContentControlEx
                                                    x:Name="PART_ContentPresenter"
                                                    Margin="{TemplateBinding BorderThickness}"
                                                    Padding="{TemplateBinding Padding}"
                                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    Content="{TemplateBinding Content}"
                                                    ContentCharacterCasing="{Binding (mah:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}"
                                                    ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    RecognizesAccessKey="True"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="Border" Property="Background" Value="Transparent" />

                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter TargetName="Border" Property="Background" Value="Transparent" />
                                                </Trigger>
                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                    <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                                                    <Setter TargetName="Border" Property="BorderThickness" Value="2" />
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="0.7" />
                                                    <Setter TargetName="PART_ContentPresenter" Property="Opacity" Value="0.3" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Style.BasedOn>
                    </Style>
                </Button.Style>


            </Button>
        </Grid>

        <!--#endregion-->

        <!--#region Row 1-->

        <Grid Grid.Row="1" Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="0.09*" />
                <RowDefinition Height="0.09*" />
                <RowDefinition Height="0.11*" />
                <RowDefinition Height="0.14*" />
                <RowDefinition Height="0.07*" />
                <RowDefinition Height="0.5*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.37*" />
                <ColumnDefinition Width="0.33*" />
                <ColumnDefinition Width="0.08*" />
                <ColumnDefinition Width="0.22*" />
            </Grid.ColumnDefinitions>
            <TextBlock
                Grid.Row="2"
                Grid.Column="0"
                Grid.ColumnSpan="3"
                Margin="5,0,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                FontFamily="Comic Sans MS"
                FontSize="16"
                FontWeight="Bold"
                Foreground="Black"
                Text="Количество серий">
                <TextBlock.RenderTransform>
                    <RotateTransform Angle="-5.4" />
                </TextBlock.RenderTransform>
            </TextBlock>
            <TextBox
                Grid.Row="1"
                Grid.RowSpan="2"
                Grid.Column="3"
                MinWidth="40"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Background="Transparent"
                BorderBrush="Transparent"
                BorderThickness="2"
                FontFamily="Comic Sans MS"
                FontSize="16"
                FontWeight="Bold"
                Foreground="Black"
                Text="{Binding EpisodeCount, UpdateSourceTrigger=PropertyChanged}">

                <TextBox.RenderTransform>
                    <RotateTransform Angle="-9.5" />
                </TextBox.RenderTransform>
                <TextBox.Style>
                    <Style TargetType="{x:Type TextBox}">
                        <Style.BasedOn>
                            <Style TargetType="{x:Type TextBox}">
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="BorderBrush" Value="Transparent" />
                                <Setter Property="CaretBrush" Value="{DynamicResource BlackBrush}" />
                                <Setter Property="ContextMenu" Value="{DynamicResource TextBoxMetroContextMenu}" />
                                <Setter Property="mah:ControlsHelper.FocusBorderBrush" Value="{DynamicResource TextBoxFocusBorderBrush}" />
                                <Setter Property="mah:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource TextBoxMouseOverBorderBrush}" />
                                <Setter Property="mah:TextBoxHelper.ButtonFontSize" Value="{DynamicResource ClearTextButtonFontSize}" />
                                <Setter Property="mah:TextBoxHelper.ButtonWidth" Value="22" />
                                <Setter Property="mah:TextBoxHelper.IsMonitoring" Value="True" />
                                <Setter Property="mah:TextBoxHelper.IsSpellCheckContextMenuEnabled" Value="{Binding (SpellCheck.IsEnabled), RelativeSource={RelativeSource Self}}" />
                                <Setter Property="mah:TextBoxHelper.WatermarkWrapping" Value="{Binding TextWrapping, Mode=OneWay, RelativeSource={RelativeSource Self}}" />
                                <Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}" />
                                <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}" />
                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                                <Setter Property="MinHeight" Value="26" />
                                <Setter Property="Padding" Value="0" />
                                <Setter Property="SelectionBrush" Value="{DynamicResource HighlightBrush}" />
                                <Setter Property="SnapsToDevicePixels" Value="True" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type TextBox}">
                                            <Grid>
                                                <AdornerDecorator x:Name="PART_WaitingForDataEffectAdornerDecorator" Visibility="Collapsed">
                                                    <Border
                                                        x:Name="PART_WaitingForDataEffectGrid"
                                                        Background="{TemplateBinding Background}"
                                                        BorderBrush="Transparent"
                                                        Effect="{DynamicResource WaitingForDataEffect}"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                </AdornerDecorator>
                                                <Border
                                                    x:Name="Base"
                                                    Background="{TemplateBinding Background}"
                                                    BorderBrush="Transparent"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                <Grid x:Name="PART_InnerGrid" Margin="2">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition x:Name="TextColumn" Width="*" />
                                                        <ColumnDefinition x:Name="ButtonColumn" Width="Auto" />
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto" />
                                                        <RowDefinition x:Name="ButtonRow" Height="*" />
                                                    </Grid.RowDefinitions>
                                                    <ScrollViewer
                                                        x:Name="PART_ContentHost"
                                                        Grid.Row="1"
                                                        Grid.Column="0"
                                                        Margin="2"
                                                        VerticalAlignment="Stretch"
                                                        Background="{x:Null}"
                                                        BorderThickness="0"
                                                        IsTabStop="False" />
                                                    <TextBlock
                                                        x:Name="PART_Message"
                                                        Grid.Row="1"
                                                        Grid.Column="0"
                                                        Margin="6,2"
                                                        Padding="{TemplateBinding Padding}"
                                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                        Foreground="{TemplateBinding Foreground}"
                                                        Style="{DynamicResource MahApps.Metro.Styles.MetroWatermarkTextBlock}"
                                                        Text="{TemplateBinding mah:TextBoxHelper.Watermark}"
                                                        TextAlignment="{TemplateBinding mah:TextBoxHelper.WatermarkAlignment}"
                                                        TextTrimming="{TemplateBinding mah:TextBoxHelper.WatermarkTrimming}"
                                                        TextWrapping="{TemplateBinding mah:TextBoxHelper.WatermarkWrapping}"
                                                        Visibility="Collapsed" />
                                                    <ContentControl
                                                        x:Name="PART_FloatingMessageContainer"
                                                        Grid.Row="0"
                                                        Grid.Column="0"
                                                        Style="{DynamicResource FloatingMessageContainerStyle}">
                                                        <ContentControl.Height>
                                                            <MultiBinding Converter="{mah1:MathMultiplyConverter}" UpdateSourceTrigger="Default">
                                                                <Binding
                                                                    ElementName="PART_FloatingMessage"
                                                                    Mode="OneWay"
                                                                    Path="ActualHeight" />
                                                                <Binding
                                                                    ElementName="PART_FloatingMessageContainer"
                                                                    Mode="OneWay"
                                                                    Path="Opacity" />
                                                            </MultiBinding>
                                                        </ContentControl.Height>
                                                        <TextBlock
                                                            x:Name="PART_FloatingMessage"
                                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                            Foreground="{TemplateBinding Foreground}"
                                                            Style="{DynamicResource MetroAutoCollapsingTextBlock}"
                                                            Text="{TemplateBinding mah:TextBoxHelper.Watermark}"
                                                            TextAlignment="{TemplateBinding mah:TextBoxHelper.WatermarkAlignment}"
                                                            TextTrimming="{TemplateBinding mah:TextBoxHelper.WatermarkTrimming}">
                                                            <TextBlock.RenderTransform>
                                                                <TranslateTransform>
                                                                    <TranslateTransform.Y>
                                                                        <MultiBinding Converter="{mah1:MathSubtractConverter}" UpdateSourceTrigger="Default">
                                                                            <Binding
                                                                                ElementName="PART_FloatingMessage"
                                                                                Mode="OneWay"
                                                                                Path="ActualHeight" />
                                                                            <Binding
                                                                                ElementName="PART_FloatingMessageContainer"
                                                                                Mode="OneWay"
                                                                                Path="ActualHeight" />
                                                                        </MultiBinding>
                                                                    </TranslateTransform.Y>
                                                                </TranslateTransform>
                                                            </TextBlock.RenderTransform>
                                                        </TextBlock>
                                                    </ContentControl>
                                                    <Button
                                                        x:Name="PART_ClearText"
                                                        Grid.Row="0"
                                                        Grid.RowSpan="2"
                                                        Grid.Column="1"
                                                        Width="{TemplateBinding mah:TextBoxHelper.ButtonWidth}"
                                                        mah:TextBoxHelper.IsClearTextButtonBehaviorEnabled="{Binding (mah:TextBoxHelper.ClearTextButton), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                        Content="{TemplateBinding mah:TextBoxHelper.ButtonContent}"
                                                        ContentTemplate="{TemplateBinding mah:TextBoxHelper.ButtonContentTemplate}"
                                                        Focusable="False"
                                                        FontFamily="{TemplateBinding mah:TextBoxHelper.ButtonFontFamily}"
                                                        FontSize="{TemplateBinding mah:TextBoxHelper.ButtonFontSize}"
                                                        Foreground="{TemplateBinding Foreground}"
                                                        IsTabStop="False"
                                                        Style="{DynamicResource ChromelessButtonStyle}">
                                                        <Button.Visibility>
                                                            <Binding
                                                                Mode="OneWay"
                                                                Path="(mah:TextBoxHelper.ClearTextButton)"
                                                                RelativeSource="{RelativeSource TemplatedParent}">
                                                                <Binding.Converter>
                                                                    <BooleanToVisibilityConverter />
                                                                </Binding.Converter>
                                                            </Binding>
                                                        </Button.Visibility>
                                                    </Button>
                                                </Grid>
                                                <Border
                                                    x:Name="DisabledVisualElement"
                                                    Background="{DynamicResource ControlsDisabledBrush}"
                                                    BorderBrush="{DynamicResource ControlsDisabledBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    IsHitTestVisible="False"
                                                    Opacity="0"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                    Visibility="{Binding (mah:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <DataTrigger Binding="{Binding (mah:TextBoxHelper.ButtonsAlignment), RelativeSource={RelativeSource Self}}" Value="Left">
                                                    <Setter TargetName="ButtonColumn" Property="Width" Value="*" />
                                                    <Setter TargetName="PART_ClearText" Property="Grid.Column" Value="0" />
                                                    <Setter TargetName="PART_ContentHost" Property="Grid.Column" Value="1" />
                                                    <Setter TargetName="PART_Message" Property="Grid.Column" Value="1" />
                                                    <Setter TargetName="TextColumn" Property="Width" Value="Auto" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="">
                                                    <Setter TargetName="PART_Message" Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsVisible, RelativeSource={RelativeSource Self}}" Value="True" />
                                                        <Condition Binding="{Binding (mah:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="True" />
                                                        <Condition Binding="{Binding (mah:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="True" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_FloatingMessageContainer" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Visible</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <DoubleAnimation
                                                                    Storyboard.TargetName="PART_FloatingMessageContainer"
                                                                    Storyboard.TargetProperty="Opacity"
                                                                    From="0"
                                                                    To="1"
                                                                    Duration="0:0:0.2">
                                                                    <DoubleAnimation.EasingFunction>
                                                                        <ExponentialEase EasingMode="EaseInOut" Exponent="2" />
                                                                    </DoubleAnimation.EasingFunction>
                                                                </DoubleAnimation>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </MultiDataTrigger.EnterActions>
                                                    <MultiDataTrigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation
                                                                    Storyboard.TargetName="PART_FloatingMessageContainer"
                                                                    Storyboard.TargetProperty="Opacity"
                                                                    From="1"
                                                                    To="0"
                                                                    Duration="0:0:0.2">
                                                                    <DoubleAnimation.EasingFunction>
                                                                        <ExponentialEase EasingMode="EaseInOut" Exponent="2" />
                                                                    </DoubleAnimation.EasingFunction>
                                                                </DoubleAnimation>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_FloatingMessageContainer" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.2">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Collapsed</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </MultiDataTrigger.ExitActions>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding (mah:TextBoxHelper.ButtonsAlignment), RelativeSource={RelativeSource Self}}" Value="Right" />
                                                        <Condition Binding="{Binding (mah:TextBoxHelper.ClearTextButton), RelativeSource={RelativeSource Self}}" Value="False" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter TargetName="PART_ContentHost" Property="Grid.ColumnSpan" Value="2" />
                                                    <Setter TargetName="PART_Message" Property="Grid.ColumnSpan" Value="2" />
                                                </MultiDataTrigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="Base" Property="BorderBrush" Value="{Binding (mah:ControlsHelper.MouseOverBorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="0.6" />
                                                </Trigger>
                                                <Trigger Property="IsReadOnly" Value="True">
                                                    <Setter TargetName="PART_ClearText" Property="IsEnabled" Value="False" />
                                                </Trigger>
                                                <Trigger Property="IsFocused" Value="True">
                                                    <Setter TargetName="Base" Property="BorderBrush" Value="{Binding (mah:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
                                                    <Setter TargetName="PART_FloatingMessage" Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
                                                    <Setter TargetName="PART_FloatingMessage" Property="Opacity" Value="1" />
                                                </Trigger>
                                                <Trigger SourceName="PART_ClearText" Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="PART_ClearText" Property="Background" Value="{DynamicResource GrayBrush8}" />
                                                    <Setter TargetName="PART_ClearText" Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
                                                </Trigger>
                                                <Trigger SourceName="PART_ClearText" Property="IsPressed" Value="True">
                                                    <Setter TargetName="PART_ClearText" Property="Background" Value="{DynamicResource BlackBrush}" />
                                                    <Setter TargetName="PART_ClearText" Property="Foreground" Value="{DynamicResource WhiteBrush}" />
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="mah:TextBoxHelper.HasText" Value="False" />
                                                        <Condition Property="IsFocused" Value="True" />
                                                    </MultiTrigger.Conditions>
                                                    <MultiTrigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation
                                                                    Storyboard.TargetName="PART_Message"
                                                                    Storyboard.TargetProperty="Opacity"
                                                                    To="0.2"
                                                                    Duration="0:0:0.2" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </MultiTrigger.EnterActions>
                                                    <MultiTrigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation
                                                                    Storyboard.TargetName="PART_Message"
                                                                    Storyboard.TargetProperty="Opacity"
                                                                    Duration="0:0:0.2" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </MultiTrigger.ExitActions>
                                                </MultiTrigger>
                                                <Trigger Property="mah:TextBoxHelper.HasText" Value="True">
                                                    <Trigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation
                                                                    Storyboard.TargetName="PART_Message"
                                                                    Storyboard.TargetProperty="Opacity"
                                                                    From="0.2"
                                                                    To="0"
                                                                    Duration="0:0:0.2" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.EnterActions>
                                                    <Trigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation
                                                                    Storyboard.TargetName="PART_Message"
                                                                    Storyboard.TargetProperty="Opacity"
                                                                    Duration="0:0:0.2" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.ExitActions>
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsVisible" Value="True" />
                                                        <Condition Property="mah:TextBoxHelper.IsWaitingForData" Value="True" />
                                                    </MultiTrigger.Conditions>
                                                    <MultiTrigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation
                                                                    AutoReverse="True"
                                                                    RepeatBehavior="Forever"
                                                                    Timeline.DesiredFrameRate="30"
                                                                    Storyboard.TargetName="PART_WaitingForDataEffectGrid"
                                                                    Storyboard.TargetProperty="(Effect).Opacity"
                                                                    From="0"
                                                                    To="1"
                                                                    Duration="0:0:2" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </MultiTrigger.EnterActions>
                                                    <Setter TargetName="PART_WaitingForDataEffectAdornerDecorator" Property="Visibility" Value="Visible" />
                                                </MultiTrigger>
                                                <Trigger Property="mah:TextBoxHelper.IsWaitingForData" Value="False">
                                                    <Setter TargetName="PART_WaitingForDataEffectAdornerDecorator" Property="Visibility" Value="Collapsed" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorTemplate}" />
                            </Style>
                        </Style.BasedOn>
                    </Style>
                </TextBox.Style>
            </TextBox>

            <StackPanel
                Grid.Row="3"
                Grid.RowSpan="2"
                Grid.Column="0"
                Margin="5,0,0,0"
                Orientation="Horizontal">

                <StackPanel.RenderTransform>
                    <RotateTransform Angle="-9.5" />
                </StackPanel.RenderTransform>

                <TextBlock
                    VerticalAlignment="Center"
                    FontFamily="Comic Sans MS"
                    FontSize="16"
                    FontWeight="Bold"
                    Foreground="Black"
                    Text="{Binding DayDuration}" />
                <TextBlock
                    VerticalAlignment="Center"
                    FontFamily="Comic Sans MS"
                    FontSize="16"
                    FontWeight="Bold"
                    Foreground="Black"
                    Text="д." />
                <TextBlock
                    VerticalAlignment="Center"
                    FontFamily="Comic Sans MS"
                    FontSize="16"
                    FontWeight="Bold"
                    Foreground="Black"
                    Text="{Binding HourDuration}" />
                <TextBlock
                    VerticalAlignment="Center"
                    FontFamily="Comic Sans MS"
                    FontSize="15"
                    FontWeight="Bold"
                    Foreground="Black"
                    Text="ч." />
                <TextBlock
                    VerticalAlignment="Center"
                    FontFamily="Comic Sans MS"
                    FontSize="16"
                    FontWeight="Bold"
                    Foreground="Black"
                    Text="{Binding MinuteDuration}" />
                <TextBlock
                    VerticalAlignment="Center"
                    FontFamily="Comic Sans MS"
                    FontSize="16"
                    FontWeight="Bold"
                    Foreground="Black"
                    Text="м." />
            </StackPanel>
            <TextBlock
                Grid.Row="2"
                Grid.RowSpan="2"
                Grid.Column="1"
                HorizontalAlignment="Right"
                VerticalAlignment="Center"
                FontFamily="Comic Sans MS"
                FontSize="16"
                FontWeight="Bold"
                Foreground="Black"
                Text="~Время ">
                <TextBlock.RenderTransform>
                    <RotateTransform Angle="-8" />
                </TextBlock.RenderTransform>
            </TextBlock>
        </Grid>

        <CheckBox
            x:Name="ShutdownComp"
            Grid.Row="1"
            Grid.Column="1"
            Margin="26,34,254,162"
            HorizontalAlignment="Center"
            VerticalAlignment="Center" />
        <!--#endregion-->

        <!--#region Row 2-->

        <Grid Grid.Row="2" Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="0.15*" />
                <RowDefinition Height="0.37*" />
                <RowDefinition Height="0.48*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.25*" />
                <ColumnDefinition Width="0.45*" />
                <ColumnDefinition Width="0.3*" />
            </Grid.ColumnDefinitions>

            <Button
                x:Name="Start"
                Grid.Row="1"
                Grid.Column="1">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Style.BasedOn>
                            <Style TargetType="{x:Type ButtonBase}">
                                <Setter Property="FontFamily" Value="Comic Sans MS" />
                                <Setter Property="FontSize" Value="17" />
                                <Setter Property="FontWeight" Value="Bold" />
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="BorderBrush" Value="Transparent" />
                                <Setter Property="Foreground" Value="#FFC2B010" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                                            <Grid>
                                                <mah:ContentControlEx x:Name="PART_ContentPresenter" Content="{TemplateBinding Content}" />
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Foreground" Value="#FF1AA181" />
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Background" Value="Transparent" />
                                                    <Setter Property="Foreground" Value="#FF30C210" />
                                                </Trigger>
                                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                    <Setter Property="Background" Value="Transparent" />
                                                    <Setter Property="Foreground" Value="#FF30C210" />
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Background" Value="Transparent" />
                                                    <Setter Property="Foreground" Value="Gray" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Style.BasedOn>
                    </Style>
                </Button.Style>
                <StackPanel Orientation="Vertical">
                    <TextBlock HorizontalAlignment="Center" Text="Начать" />
                    <TextBlock HorizontalAlignment="Center" Text="просмотр" />
                </StackPanel>

            </Button>
        </Grid>

        <!--#endregion-->




    </Grid>
    <!--</Grid>-->
</UserControl>
